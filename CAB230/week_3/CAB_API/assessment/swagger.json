{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Movie information API",
    "description": "This API provides access to publicly available data on a limited number of movies published from the year 1990 from the Internet Movie Database and other sources. The API endpoints and their usage are described in detail below."
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Enter JWT Bearer token **_only_**"
      }
    },
    "schemas": {
      "InvalidYearFormat": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": "true"
          },
          "message": {
            "type": "string",
            "example": "Invalid year format. Format must be yyyy."
          }
        }
      },
      "MissingAuthHeader": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": "true"
          },
          "message": {
            "type": "string",
            "example": "Authorization header ('Bearer token') not found"
          }
        }
      },
      "TokenExpired": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": "true"
          },
          "message": {
            "type": "string",
            "example": "JWT token has expired"
          }
        }
      },
      "InvalidJWT": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": "true"
          },
          "message": {
            "type": "string",
            "example": "Invalid JWT token"
          }
        }
      },
      "InvalidPageFormat": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": "true"
          },
          "message": {
            "type": "string",
            "example": "Invalid page format. page must be a number."
          }
        }
      }
    }
  },
  "paths": {
    "/movies/search": {
      "get": {
        "tags": ["Movies"],
        "description": "Returns a list of movie data. The list is arranged by imdbId, in ascending order.",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Text to search for in the primary title of the movie.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "The year of initial release of the movie",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of objects containing title, year, imdbID, imdbRating, rottenTomatoesRating, metacriticRating and classification properties. The results are limited to 100 per page. An example of one object in the array is shown below.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "Star Trek: First Contact"
                          },
                          "year": {
                            "type": "integer",
                            "example": 1996
                          },
                          "imdbID": {
                            "type": "string",
                            "example": "tt0117731"
                          },
                          "imdbRating": {
                            "type": "number",
                            "example": 7.6
                          },
                          "rottenTomatoesRating": {
                            "type": "number",
                            "example": 92
                          },
                          "metacriticRating": {
                            "type": "number",
                            "example": 71
                          },
                          "classification": {
                            "type": "string",
                            "example": "PG-13"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "number",
                          "example": 6
                        },
                        "lastPage": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 100
                        },
                        "currentPage": {
                          "type": "number",
                          "example": 1
                        },
                        "from": {
                          "type": "number",
                          "example": 0
                        },
                        "to": {
                          "type": "number",
                          "example": 6
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid year query parameter. Click on 'Schema' below to see the possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/InvalidYearFormat"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidPageFormat"
                    }
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/movies/data/{imdbID}": {
      "get": {
        "tags": ["Movies"],
        "description": "Get data for a movie by imdbID",
        "operationId": "getMovieData",
        "parameters": [
          {
            "name": "imdbID",
            "in": "path",
            "description": "The imdbID of the movie",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing the data for the movie.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "Star Trek: First Contact"
                    },
                    "year": {
                      "type": "integer",
                      "example": 1996
                    },
                    "runtime": {
                      "type": "integer",
                      "example": 111
                    },
                    "genres": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Action"
                      },
                      "example": ["Action", "Adventure", "Drama"]
                    },
                    "country": {
                      "type": "string",
                      "example": "United States"
                    },
                    "principals": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "nm0001772"
                          },
                          "name": {
                            "type": "string",
                            "example": "Patrick Stewart"
                          },
                          "category": {
                            "type": "string",
                            "example": "actor"
                          },
                          "characters": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "Picard"
                            }
                          }
                        },
                        "required": ["id", "name", "category", "characters"]
                      },
                      "example": [
                        {
                          "id": "nm0005772",
                          "category": "cinematographer",
                          "name": "Matthew F. Leonetti",
                          "characters": []
                        },
                        {
                          "id": "nm0001772",
                          "category": "actor",
                          "name": "Patrick Stewart",
                          "characters": ["Picard"]
                        },
                        {
                          "id": "nm0000408",
                          "category": "actor",
                          "name": "Jonathan Frakes",
                          "characters": ["Riker"]
                        },
                        {
                          "id": "nm0000653",
                          "category": "actor",
                          "name": "Brent Spiner",
                          "characters": ["Data"]
                        },
                        {
                          "id": "nm0000996",
                          "category": "actor",
                          "name": "LeVar Burton",
                          "characters": ["Geordi"]
                        },
                        {
                          "id": "nm0734472",
                          "category": "writer",
                          "name": "Gene Roddenberry",
                          "characters": []
                        },
                        {
                          "id": "nm0075834",
                          "category": "writer",
                          "name": "Rick Berman",
                          "characters": []
                        },
                        {
                          "id": "nm0103804",
                          "category": "writer",
                          "name": "Brannon Braga",
                          "characters": []
                        },
                        {
                          "id": "nm0601822",
                          "category": "writer",
                          "name": "Ronald D. Moore",
                          "characters": []
                        },
                        {
                          "id": "nm0000025",
                          "category": "composer",
                          "name": "Jerry Goldsmith",
                          "characters": []
                        }
                      ]
                    },
                    "ratings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source": {
                            "type": "string",
                            "example": "Internet Movie Database"
                          },
                          "value": {
                            "type": "number",
                            "example": 7.6
                          }
                        }
                      }
                    },
                    "boxoffice": {
                      "type": "integer",
                      "example": 92027888
                    },
                    "poster": {
                      "type": "string",
                      "example": "https://m.media-amazon.com/images/M/MV5BYzMzZmE3MTItODYzYy00YWI5LWFkNWMtZTY5NmU2MDkxYWI1XkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_SX300.jpg"
                    },
                    "plot": {
                      "type": "string",
                      "example": "The Borg travel back in time intent on preventing Earth's first contact with an alien species. Captain Picard and his crew pursue them to ensure that Zefram Cochrane makes his maiden flight reaching warp speed."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters. Click on 'Schema' to see possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid query parameters: year. Query parameters are not permitted."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The requested movie could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "No record exists of a movie with this ID"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "tags": ["People"],
        "description": "Get information about a person (actor, writer, director etc.) from their IMDB ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The person's IMDB ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An object containing data about that person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Patrick Stewart"
                    },
                    "birthYear": {
                      "type": "integer",
                      "example": 1940
                    },
                    "deathYear": {
                      "type": "integer",
                      "example": null
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "movieName": {
                            "type": "string",
                            "example": "Star Trek: First Contact"
                          },
                          "movieId": {
                            "type": "string",
                            "example": "tt0117731"
                          },
                          "category": {
                            "type": "string",
                            "example": "actor"
                          },
                          "characters": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "Picard"
                            }
                          },
                          "imdbRating": {
                            "type": "number",
                            "example": 7.6
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters. Click on 'Schema' to see possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid query parameters: year. Query parameters are not permitted."
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Click on 'Schema' below to see the possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MissingAuthHeader"
                    },
                    {
                      "$ref": "#/components/schemas/TokenExpired"
                    },
                    {
                      "$ref": "#/components/schemas/InvalidJWT"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The requested person could not be found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "No record exists of a person with this ID"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["Authentication"],
        "description": "Creates a new user account. A request body containing the user to be registered must be sent.",
        "requestBody": {
          "description": "An object containing the email and password of the user to be registered.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "mike@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body incomplete, both email and password are required"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exists"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "Log in to an existing user account. A request body containing the user credentials must be sent. The longExpiry bool is a setting for development use only that makes both tokens expire after a year.",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "The credentials of the user to log in.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "mike@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "longExpiry": {
                    "type": "boolean",
                    "example": "false"
                  },
                  "bearerExpiresInSeconds": {
                    "type": "number",
                    "example": 600
                  },
                  "refreshExpiresInSeconds": {
                    "type": "boolean",
                    "example": 86400
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Log in successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bearerToken": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ajsonwebtoken"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Bearer"
                        },
                        "expires_in": {
                          "type": "number",
                          "example": 600
                        }
                      }
                    },
                    "refreshToken": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ajsonwebtoken"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Refresh"
                        },
                        "expires_in": {
                          "type": "number",
                          "example": 86400
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid log in request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body incomplete, both email and password are required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Log in failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "Incorrect email or password"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "description": "Obtain a new bearer token by using a refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "The refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "ajsonwebtoken"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bearerToken": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ajsonwebtoken"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Bearer"
                        },
                        "expires_in": {
                          "type": "number",
                          "example": 600
                        }
                      }
                    },
                    "refreshToken": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ajsonwebtoken"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Refresh"
                        },
                        "expires_in": {
                          "type": "number",
                          "example": 86400
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body incomplete, refresh token required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Click on 'Schema' below to see the possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenExpired"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "description": "Log the user out, invalidating the refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "The refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "ajsonwebtoken"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token successfully invalidated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Token successfully invalidated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": "true"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body incomplete, refresh token required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Click on 'Schema' below to see the possible error responses.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenExpired"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "example": "Too many requests, please try again later."
                }
              }
            }
          }
        }
      }
    }
  }
}
